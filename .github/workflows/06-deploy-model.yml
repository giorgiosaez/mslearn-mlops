name: Challenge 6 - Deploy and test the model

# Controls when the workflow will run 
on:
  workflow_dispatch:
  # Triggers the workflow on push but only for the "main" branch
  #push:
  #  branches: [ "main" ]
env:    
  #RUNID : runid-${{ github.run_id }}-${{ github.run_attempt }}-${{github.repository_owner}}
  RUNID : runid-${{ github.run_id }}-${{ github.run_attempt }}-gs
  MODELNAME : diabetes-gs-model
  ENDPOINTNAME : endpoint-${{ github.run_id }}-${{ github.run_attempt }}-gs
  BATCHENDPOINTNAME : batch-${{ github.run_id }}-${{ github.run_attempt }}-gs
  DEPLOYMENTNAME : deployment-${{ github.run_id }}-${{ github.run_attempt }}-gs
jobs:
  linting:
    name: linting
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@main    
    - name: Use Python version 3.8
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install Flake8
      run: |
        python -m pip install flake8
    - name: Run linting tests
      run: | 
        flake8 src/model/
  experiment:
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
    - name: Check out repo
      uses: actions/checkout@main
    - name: Install az ml extension
      run: az extension add -n ml -y
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Submit ML job
      run: az ml job create --file src/job.yml --resource-group rg-tccc-ms-training-for-dts-dsml-poc --workspace-name aml-tccc-ms-training-dts-dsml-poc --stream
  production:
    runs-on: ubuntu-latest
    needs: [experiment,linting]
    environment:
      name: production
    steps:
    - name: Check out repo
      uses: actions/checkout@main
    - name: Install az ml extension
      run: az extension add -n ml -y
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Submit ML job
      run: az ml job create --file src/job-prod.yml --resource-group rg-tccc-ms-training-for-dts-dsml-poc --workspace-name aml-tccc-ms-training-dts-dsml-poc --name $RUNID --stream  

  register-model:
    name: Register Model
    runs-on: ubuntu-latest
    needs: [production]
    environment:
      name: prod
    steps:
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Create model as an asset in Azure ML
        run: az ml model create --name ${{env.MODELNAME}} --path azureml://jobs/${{env.RUNID}}/outputs/artifacts/paths/model/ --type mlflow_model --resource-group rg-tccc-ms-training-for-dts-dsml-poc --workspace-name aml-tccc-ms-training-dts-dsml-poc   
  create-endpoint:
    name: Create Endpoint
    runs-on: ubuntu-latest
    needs: [register-model]
    environment:
      name: prod
    steps:
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Create an Online Endpoint in Azure ML
        run: az ml online-endpoint create -f src/create-endpoint.yml --name ${{env.ENDPOINTNAME}} --resource-group rg-tccc-ms-training-for-dts-dsml-poc --workspace-name aml-tccc-ms-training-dts-dsml-poc
  create-deployment:
    name: Create Deployment
    runs-on: ubuntu-latest
    needs: [create-endpoint]
    environment:
      name: prod
    steps:
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Create an Online Deployment in previously created endpoint in Azure ML
        run: az ml online-deployment create -f src/deployment.yml --endpoint-name ${{env.ENDPOINTNAME}} --name ${{env.DEPLOYMENTNAME}} --resource-group rg-tccc-ms-training-for-dts-dsml-poc --workspace-name aml-tccc-ms-training-dts-dsml-poc --all-traffic
  batch-endpoint:
    name: Create Batch Endpoint
    runs-on: ubuntu-latest
    needs: [register-model]
    environment:
      name: prod
    steps:
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Create an Online Endpoint in Azure ML
        run: az ml batch-endpoint create --name ${{env.BATCHENDPOINTNAME}} --resource-group rg-tccc-ms-training-for-dts-dsml-poc --workspace-name aml-tccc-ms-training-dts-dsml-poc

  create-batch-deployment:
    name: Create Batch Deployment
    runs-on: ubuntu-latest
    needs: [create-endpoint]
    environment:
      name: prod
    steps:
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Create an Online Deployment in previously created endpoint in Azure ML
        run: az ml batch-deployment create -f src/batch-deployment.yml --endpoint-name ${{env.BATCHENDPOINTNAME}} --name ${{env.DEPLOYMENTNAME}} --resource-group rg-tccc-ms-training-for-dts-dsml-poc --workspace-name aml-tccc-ms-training-dts-dsml-poc
